version: '3.8'

x-api-variables: &api-variables
  SERVER_PORT: ${SERVER_PORT}
  ACCESS_TOKEN_PUBLIC_SECRET_PATH: /app/cert/access.pub
  ACCESS_TOKEN_PRIVATE_SECRET_PATH: /app/cert/access

x-db-variables: &db-variables
  DB_HOST: postgres-db
  DB_PORT: ${DB_PORT}
  DB_NAME: ${DB_NAME}
  DB_USER: ${DB_USER}
  DB_PASSWORD: ${DB_PASSWORD}

x-redis-variables: &redis-variables
  REDIS_HOST: redis-whitelist
  REDIS_PORT: ${REDIS_PORT}
  REDIS_PASSWORD: ${REDIS_PASSWORD}

services:
  nginx-gateway:
    image: nginx:1.25.3-alpine
    container_name: nginx-gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
    networks:
      - auth_network

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    # restart: unless-stopped
    depends_on: 
      - redis-whitelist
      - postgres-db
    environment:
      <<: [*db-variables, *api-variables, *redis-variables]
    networks:
      - auth_network

  postgres-db:
    image: postgres:16.1
    container_name: postgres-db
    ports:
      - ${DB_PORT}:5432
    volumes:
      - postgres_db_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_PORT: ${DB_PORT}
    networks:
      - auth_network

  redis-whitelist:
    container_name: redis-whitelist
    image: redis:7.0.11
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes: 
      - redis-whitelist-volume:/data
    networks:
      - auth_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    # restart: always
    ports:
      - "8888:80"
    environment:
      # host.docker.internal instead of localhost while connecting to DB in pgAdmin 
      PGADMIN_DEFAULT_EMAIL: root@example.com
      PGADMIN_DEFAULT_PASSWORD: 1234
    depends_on:
      - postgres-db
    volumes:
      - pgadmin_volume:/var/lib/pgadmin
    networks:
      - auth_network

volumes:
  postgres_db_volume:
  pgadmin_volume:
  redis-whitelist-volume:

networks:
  auth_network:   
    driver: bridge 